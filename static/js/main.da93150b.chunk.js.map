{"version":3,"sources":["components/About.js","moon.png","components/Navbar.js","components/TextForm.js","components/Services.js","components/Help.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","className","mode","Navbar","to","title","type","placeholder","src","moon","alt","onClick","modeSwitch","TextForm","useState","text","setText","cols","rows","onChange","event","target","value","upperCase","toUpperCase","disabled","length","lower","toLowerCase","showAlert","txt","document","querySelector","navigator","clipboard","writeText","currentChar","prevChar","result","flag","str","console","log","i","split","filter","wrd","replace","trim","help","Alert","msg","message","App","setMode","alert","setAlert","body","style","background","path","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gSAEe,SAASA,EAAMC,GAC1B,OACI,mCACI,sBAAKC,UAAU,YAAf,UACI,oBAAIA,UAAS,wBAAmBD,EAAME,MAAtC,6BACA,sBAAKD,UAAU,gBAAf,UACI,mBAAGA,UAAS,cAASD,EAAME,MAA3B,4DAAqF,uBACrF,mBAAGD,UAAS,cAASD,EAAME,MAA3B,uO,UCTL,MAA0B,iC,OCM1B,SAASC,EAAOH,GAS3B,OACI,mCACI,sBAAKC,UAAS,6BAAwBD,EAAME,MAA5C,UACI,qBAAKD,UAAU,8BAAf,SACI,6BAAI,cAAC,IAAD,CAAMG,GAAG,oBAAoBH,UAAU,OAAvC,SAA+CD,EAAMK,YAE7D,qBAAKJ,UAAU,QAAf,SACI,qBAAIA,UAAU,iBAAd,UACI,6BAAI,cAAC,IAAD,CAAMG,GAAG,oBAAoBH,UAAS,cAASD,EAAME,KAAf,QAAtC,oBACJ,6BAAI,cAAC,IAAD,CAAME,GAAG,yBAAyBH,UAAS,cAASD,EAAME,KAAf,QAA3C,qBACJ,6BAAI,cAAC,IAAD,CAAME,GAAG,wBAAwBH,UAAS,cAASD,EAAME,KAAf,QAA1C,sBACJ,6BAAI,cAAC,IAAD,CAAME,GAAG,4BAA4BH,UAAS,cAASD,EAAME,KAAf,QAA9C,6BAIZ,sBAAKD,UAAU,+BAAf,UACI,uBAAOK,KAAK,OAAOC,YAAY,WAC/B,wBAAQN,UAAS,cAASD,EAAME,MAAhC,oBACA,qBAAKM,IAAKC,EAAMC,IAAI,GAAGT,UAAU,OAAOU,QAxBxD,WAEQX,EAAMY,wB,MCPH,SAASC,EAASb,GAE7B,IA0DA,EAAuBc,mBAAS,IAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KAGA,OACI,mCACI,sBAAKf,UAAU,8BAAf,UACI,oBAAIA,UAAS,wBAAmBD,EAAME,MAAtC,uCACA,0BAAUK,YAAY,uBAAuBU,KAAK,MAAMC,KAAK,KAAKC,SAjBzD,SAACC,GAClBJ,EAAQI,EAAMC,OAAOC,QAgB6EA,MAAOP,EAAMd,UAAS,kBAAaD,EAAME,QACnI,sBAAKD,UAAU,cAAf,UACI,sBAAKA,UAAU,WAAf,UACI,wBAAQA,UAAS,cAASD,EAAME,KAAf,wBAA2CS,QAzB5D,WAChB,IAAIY,EAAYR,EAAKS,cACrBR,EAAQO,IAuB0FE,SAAwB,IAAdV,EAAKW,OAAjG,uBACA,wBAAQzB,UAAS,cAASD,EAAME,KAAf,wBAA2CS,QAlBxD,WACpB,IAAIgB,EAAQZ,EAAKa,cACjBZ,EAAQW,IAgB8FF,SAAwB,IAAdV,EAAKW,OAArG,0BAEJ,sBAAKzB,UAAU,WAAf,UACI,wBAAQA,UAAS,cAASD,EAAME,KAAf,wBAA2CS,QAjB5D,WAChBK,EAAQ,KAgB0FS,SAAwB,IAAdV,EAAKW,OAAjG,mBACA,wBAAQzB,UAAS,cAASD,EAAME,KAAf,wBAA2CS,QAzE7D,WACfX,EAAM6B,UAAU,4BAChB,IAAIC,EAAMC,SAASC,cAAc,QACjCC,UAAUC,UAAUC,UAAUL,EAAIR,QAsE+DG,SAAwB,IAAdV,EAAKW,OAAhG,qBAEJ,qBAAKzB,UAAU,aAAf,SACI,wBAAQA,UAAS,cAASD,EAAME,KAAf,wBAA2CS,QAvE3D,WAEjB,IAAIyB,EACAC,EAFJrC,EAAM6B,UAAU,kCAGhB,IAAIS,EAAO,GACPC,EAAK,EACLC,EAAMzB,EACV0B,QAAQC,IAAIF,GACZJ,EAAcI,EAAI,GAClBH,EAAWG,EAAI,GAEf,IAAI,IAAIG,EAAI,EAAEA,EAAEH,EAAId,OAAOiB,IAMvB,GALa,IAATJ,GACe,MAAXC,EAAIG,IAAyB,OAAXH,EAAIG,KACtBJ,EAAK,GAGA,IAATA,EAAY,CAEZ,GAAoB,OADpBH,EAAcI,EAAIG,KACyB,OAAhBP,EACvBE,GAAUF,MAEV,CACA,GAAiB,MAAbC,GAAiC,OAAbG,EAAKG,EAAE,GAC3B,SAIAL,GAAUF,EAGlBC,EAAWD,EAKnBpB,EAAQsB,IAmC2Fb,SAAwB,IAAdV,EAAKW,OAAlG,yBAIR,wBAAOzB,UAAU,aAAjB,UACI,+BACI,uCACA,6BAAKc,EAAK6B,MAAM,KAAKC,QAAO,SAACC,GAAD,MAAgB,KAARA,KAAapB,YAErD,+BACI,8DACA,6BAAKX,EAAKW,YAEd,+BACI,4DACA,6BAAKX,EAAKgC,QAAQ,MAAO,IAAIrB,YAEjC,+BACI,2CACA,6BAAKX,EAAK6B,MAAM,KAAKC,QAAO,SAACC,GAAD,MAAgB,KAARA,KAAapB,YAErD,+BACI,4CACA,6BAAY,KAAPX,EAAY,EAAGA,EAAKiC,OAAOJ,MAAM,QAAQlB,oB,MCvGvD,SAAS3B,EAAMC,GAC1B,OACI,mCACI,sBAAKC,UAAU,qBAAf,UACI,oBAAIA,UAAS,wBAAmBD,EAAME,MAAtC,sBACA,sBAAKD,UAAU,mBAAf,UACI,mBAAGA,UAAS,cAASD,EAAME,MAA3B,gDAAyE,+B,iBCN9E,SAAS+C,EAAKjD,GACzB,OACI,mCACI,sBAAKC,UAAU,iBAAf,UACI,oBAAIA,UAAS,wBAAmBD,EAAME,MAAtC,wBACA,sBAAKD,UAAU,eAAf,UACI,oBAAIA,UAAS,yBAAoBD,EAAME,MAAvC,SAA+C,2CAAoB,uBACnE,wBAAOD,UAAU,MAAjB,UACI,+BACI,oBAAIA,UAAS,cAASD,EAAME,MAA5B,uBACA,oBAAID,UAAS,cAASD,EAAME,MAA5B,0CAEJ,+BACI,oBAAID,UAAS,cAASD,EAAME,MAA5B,uBACA,oBAAID,UAAS,cAASD,EAAME,MAA5B,0CAEJ,+BACI,oBAAID,UAAS,cAASD,EAAME,MAA5B,mBACA,oBAAID,UAAS,cAASD,EAAME,MAA5B,oCAEJ,+BACI,oBAAID,UAAS,cAASD,EAAME,MAA5B,kBACA,oBAAID,UAAS,cAASD,EAAME,MAA5B,6CAEJ,+BACI,oBAAID,UAAS,cAASD,EAAME,MAA5B,oBACA,oBAAID,UAAS,cAASD,EAAME,MAA5B,sE,MC1Bb,SAASgD,EAAMlD,GAE1B,OACI,mCACiB,OAAZA,EAAMmD,KAAc,qBAAKlD,UAAU,QAAf,SAChBD,EAAMmD,IAAIC,YCqDZC,MA/Cf,WACI,MAAuBvC,mBAAS,SAAhC,mBAAOZ,EAAP,KAAYoD,EAAZ,KACA,EAAyBxC,mBAAS,MAAlC,mBAAOyC,EAAP,KAAaC,EAAb,KAqBA,OACI,mCACI,eAAC,IAAD,WACI,cAAC,EAAD,CAAQnD,MAAM,YAAYH,KAAQA,EAAMU,WAvBrC,WACE,UAATV,GACAoD,EAAQ,QACRvB,SAAS0B,KAAKC,MAAMC,WAAa,YAIjCL,EAAQ,SACRvB,SAAS0B,KAAKC,MAAMC,WAAa,YAgB7B,cAAC,EAAD,CAAOR,IAAKI,IACZ,eAAC,IAAD,WACI,cAAC,IAAD,CAAOK,KAAK,wBAAZ,SACI,cAAC,EAAD,CAAM1D,KAAMA,MAEhB,cAAC,IAAD,CAAO0D,KAAK,4BAAZ,SACI,cAAC,EAAD,CAAU1D,KAAMA,MAEpB,cAAC,IAAD,CAAO0D,KAAK,yBAAZ,SACI,cAAC,EAAD,CAAO1D,KAAMA,MAEjB,cAAC,IAAD,CAAO0D,KAAK,oBAAZ,SACI,cAAC,EAAD,CAAU1D,KAAQA,EAAM2B,UAzB1B,SAACsB,GACfK,EAAS,CACLJ,QAAQD,IAEZU,YAAW,WACPL,EAAS,QACX,mBCrBKM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1C,SAAS2C,eAAe,SAM1BZ,M","file":"static/js/main.da93150b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './About.css'\r\nexport default function About(props) {\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h1 className={`title-txt txt-${props.mode}`}>About TextUtils</h1>\r\n                <div className=\"about-content\">\r\n                    <p className={`txt-${props.mode}`}> Hi Iam Ajay and iam the creator of TextUtils.</p><br />\r\n                    <p className={`txt-${props.mode}`}>TextUtils is a web application that helps you to format text. You get many features in our application like removing unwantend spacing, Converting to upper case, downloading the text as document and many more.</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/moon.c7c4d4f9.png\";","import React from 'react'\r\nimport './Navbar.css';\r\nimport PropTypes from 'prop-types'\r\nimport moon from \"../moon.png\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    \r\n\r\n    function handleDark(){\r\n       \r\n            props.modeSwitch();\r\n       \r\n        }\r\n        \r\n    return (\r\n        <>  \r\n            <nav className={`flex-container nav-${props.mode}`}>\r\n                <div className=\"left-content flex-container\">\r\n                    <h1><Link to=\"/TextUtils-React/\" className=\"logo\">{props.title}</Link></h1>\r\n                </div>\r\n                <div className=\"Links\">\r\n                    <ul className=\"flex-container\">\r\n                        <li><Link to=\"/TextUtils-React/\" className={`txt-${props.mode} lnk`}>Home</Link></li>\r\n                        <li><Link to=\"/TextUtils-React/about\" className={`txt-${props.mode} lnk`}>About</Link></li>\r\n                        <li><Link to=\"/TextUtils-React/help\" className={`txt-${props.mode} lnk`}>HowTo?</Link></li>\r\n                        <li><Link to=\"/TextUtils-React/services\" className={`txt-${props.mode} lnk`}>Services</Link></li>\r\n                    </ul>\r\n                </div>\r\n        \r\n                <div className=\"right-content flex-container\">\r\n                    <input type=\"text\" placeholder=\"Search\" />\r\n                    <button className={`btn-${props.mode}`}>Search</button>\r\n                    <img src={moon} alt=\"\" className=\"mBtn\" onClick={handleDark} />\r\n                </div>\r\n            </nav>    \r\n        </>\r\n    );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title : PropTypes.string.isRequired\r\n}\r\n\r\n// Navbar.defaultProps = {\r\n//     title : \"Title here\"\r\n// };\r\n\r\n","import React, {useState} from 'react'\r\nimport './TextForm.css';\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleCopy = ()=>{\r\n        props.showAlert(\"Text Copied Successfully\")\r\n        let txt = document.querySelector(\".txt\");\r\n        navigator.clipboard.writeText(txt.value);\r\n    }\r\n    const handleFormat = ()=>{\r\n        props.showAlert(\"Successfully Formated the text\");\r\n        let currentChar;\r\n        let prevChar;\r\n        let result=\"\";\r\n        let flag=0;\r\n        var str = text;\r\n        console.log(str);\r\n        currentChar = str[0];\r\n        prevChar = str[0];\r\n\r\n        for(let i = 0;i<str.length;i++){\r\n            if (flag === 0) {\r\n                if (str[i] !== \" \" && str[i] !== \"\\n\") {\r\n                    flag=1;\r\n                }\r\n            }\r\n            if (flag === 1) {\r\n                currentChar = str[i];\r\n                if (currentChar !== \" \" && currentChar !== \"\\n\") {\r\n                    result += currentChar;\r\n                }\r\n                else{\r\n                    if (prevChar === \" \" || str[(i-2)]===\"\\n\") {\r\n                        continue;\r\n                    }\r\n                    else{\r\n\r\n                        result += currentChar;\r\n                    }\r\n                }\r\n                prevChar = currentChar;\r\n            }\r\n        \r\n        }\r\n\r\n        setText(result);\r\n    }\r\n    const handleClick = ()=>{\r\n        let upperCase = text.toUpperCase();\r\n        setText(upperCase);\r\n    }\r\n\r\n    const handleChange = (event)=>{\r\n        setText(event.target.value);    \r\n    }\r\n    const handleLowerCase = ()=>{\r\n        let lower = text.toLowerCase();\r\n        setText(lower);\r\n    }\r\n    const handleClear = ()=>{\r\n        setText(\"\");\r\n    }\r\n    const [text,setText] = useState(\"\");\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-content flex-container\" >\r\n                <h2 className={`tit my1-3 txt-${props.mode}`}>Enter the text to Analyze</h2>\r\n                <textarea placeholder=\"Enter your text here\" cols=\"100\" rows=\"10\" onChange={handleChange} value={text} className={`txt inp-${props.mode}`}></textarea>\r\n                <div className=\"button my-3\">\r\n                    <div className=\"btn-grp1\">\r\n                        <button className={`btn-${props.mode} mx1-3 normal-button`} onClick={handleClick} disabled={text.length===0}>UpperCase</button>\r\n                        <button className={`btn-${props.mode} mx1-3 normal-button`} onClick={handleLowerCase} disabled={text.length===0}>LowerCase</button>\r\n                    </div>\r\n                    <div className=\"btn-grp2\">\r\n                        <button className={`btn-${props.mode} mx1-3 normal-button`} onClick={handleClear} disabled={text.length===0}>Clear</button>\r\n                        <button className={`btn-${props.mode} mx1-3 normal-button`} onClick={handleCopy} disabled={text.length===0}>Copy</button>\r\n                    </div>\r\n                    <div className=\"revert-btn\">\r\n                        <button className={`btn-${props.mode} mx1-3 normal-button`} onClick={handleFormat} disabled={text.length===0}>Format</button>\r\n                    </div>\r\n                </div>\r\n                \r\n                <table className=\"table my-3\">\r\n                    <tr>\r\n                        <th>Words</th>\r\n                        <td>{text.split(\" \").filter((wrd)=>(wrd !== \"\")).length}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Characters(Including spaces)</th>\r\n                        <td>{text.length}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Characters(Without spaces)</th>\r\n                        <td>{text.replace(/\\s/g, \"\").length}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Sentences</th>\r\n                        <td>{text.split(\".\").filter((wrd)=>(wrd !== \"\")).length}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Paragraphs</th>\r\n                        <td>{text===\"\" ? 0 :text.trim().split(\"\\n\\n\").length}</td>\r\n                    </tr>\r\n                </table>\r\n                {/* <p className=\"txtData\">{text.split(\" \").length} Words and {text.length} chars</p> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Services.css'\r\nexport default function About(props) {\r\n    return (\r\n        <>\r\n            <div className=\"services-container\">\r\n                <h1 className={`title-txt txt-${props.mode}`}>Services</h1>\r\n                <div className=\"services-content\">\r\n                    <p className={`txt-${props.mode}`}> This Page will be Updated Soon...</p><br />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Help.css'\r\nexport default function help(props) {\r\n    return (\r\n        <>\r\n            <div className=\"help-container\">\r\n                <h1 className={`title-txt txt-${props.mode}`}>How To Use</h1>\r\n                <div className=\"help-content\">\r\n                    <h2 className={`help-title txt-${props.mode}`}><u> Buttons</u></h2><br />\r\n                    <table className=\"tbl\">\r\n                        <tr>\r\n                            <th className={`txt-${props.mode}`}>UpperCase</th>\r\n                            <td className={`txt-${props.mode}`}>Convert text to UpperCase</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th className={`txt-${props.mode}`}>LowerCase</th>\r\n                            <td className={`txt-${props.mode}`}>Convert text to LowerCase</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th className={`txt-${props.mode}`}>Clear</th>\r\n                            <td className={`txt-${props.mode}`}>Clears the textarea</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th className={`txt-${props.mode}`}>Copy</th>\r\n                            <td className={`txt-${props.mode}`}>Copies the text to clipboard</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th className={`txt-${props.mode}`}>Format</th>\r\n                            <td className={`txt-${props.mode}`}>Removes extra spaces and extra empty lines</td>\r\n                        </tr>\r\n                    </table>\r\n                    {/* <p className={`txt-${props.mode} help-text`}> <br />\r\n                   <b><span>Clear</span></b>  : clear the textarea <br />\r\n                    <b><span>Format</span> </b> : remove extra spaces and extra empty lines<br />\r\n                   <b><span>Copy</span> </b>   : Copies the text to clipboard\r\n                    </p><br /> */}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Alert.css'\r\nexport default function Alert(props) {\r\n\r\n    return (\r\n        <>\r\n            {props.msg!==null && <div className=\"alert\">\r\n                {props.msg.message}\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react';\nimport About from './components/About';\nimport Navbar from './components/Navbar'\nimport TextForm from './components/TextForm';\nimport Services from './components/Services'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n  } from \"react-router-dom\";\nimport Help from './components/Help';\nimport Alert from './components/Alert';\n\nfunction App(){\n    const [mode,setMode] = useState('light');\n    const [alert,setAlert] = useState(null);\n    const toggle = ()=>{\n        if (mode === 'light') {\n            setMode('dark');\n            document.body.style.background = \"#181818\"\n\n        }\n        else{\n            setMode('light');\n            document.body.style.background = \"white\"\n        }\n    }\n    const showAlert = (msg)=>{\n        setAlert({\n            message:msg\n        });\n        setTimeout(()=>{\n            setAlert(null);\n        },1000);\n        \n    }\n    return(\n        <>\n            <Router> \n                <Navbar title=\"TextUtils\" mode = {mode} modeSwitch={toggle} />  \n                <Alert msg={alert} />\n                <Switch>\n                    <Route path=\"/TextUtils-React/help\">\n                        <Help mode={mode} />\n                    </Route>\n                    <Route path=\"/TextUtils-React/services\">\n                        <Services mode={mode} />\n                    </Route>\n                    <Route path=\"/TextUtils-React/about\">\n                        <About mode={mode} />\n                    </Route>\n                    <Route path=\"/TextUtils-React/\">\n                        <TextForm mode = {mode} showAlert = {showAlert} />\n                    </Route>\n                </Switch>\n            </Router>\n        </>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}